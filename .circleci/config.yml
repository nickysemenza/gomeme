version: 2
jobs:
  # build-docker:
  #   #https://github.com/builtinnya/circleci-2.0-beta-docker-example/blob/master/.circleci/config.yml
  #   working_directory: /app
  #   docker:
  #     - image: docker:17.05.0-ce-git
  #   steps:
  #     - checkout
  #     - setup_remote_docker
  #     - restore_cache:
  #         keys:
  #           - v1-{{ .Branch }}
  #     - run:
  #         name: Load Docker image layer cache
  #         command: |
  #           set +o pipefail
  #           docker load -i /caches/app.tar | true
  #     - run:
  #         name: Build application Docker image
  #         command: |
  #           docker build --cache-from=app -t nicky/gomeme .
  #     - run:
  #         name: Save Docker image layer cache
  #         command: |
  #           mkdir -p /caches
  #           docker save -o /caches/app.tar nicky/gomeme
  #     - save_cache:
  #         key: v1-{{ .Branch }}-{{ epoch }}
  #         paths:
  #           - /caches/app.tar
  #     - deploy:
  #         name: Push application Docker image
  #         command: |
  #           docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
  #           docker push nicky/gomeme:latest
  #           docker run --entrypoint="./gomeme" nicky/gomeme
  test-server:
    docker:
      - image: circleci/golang:1.16
    steps:
      - checkout
      - run: go build ./...
      - run: ./test_coverage.sh
      - run: bash <(curl -s https://codecov.io/bash)
      - store_test_results:
          path: .
  test-ui:
    docker:
      - image: node:17
    working_directory: ~/gomeme/ui
    steps:
      - checkout:
          path: ~/gomeme
      - run: yarn install
      - run: yarn test -- --coverage
      - run: bash <(curl -s https://codecov.io/bash)
      - run: yarn run build
      - store_test_results:
          path: ~/gomeme/ui
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - test-server
      - test-ui
      # - build-docker:
      #     requires:
      #       - test-ui
      #       - test-server
